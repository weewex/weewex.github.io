{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\App.svelte",
    "..\\..\\Graph.svelte",
    "..\\..\\Table.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import {onMount} from 'svelte'\n  import Graph from './Graph.svelte';\n  import Table from './Table.svelte';\n\n  let pricedata = [];\n\n  onMount(() => {\n    fetch('https://financialmodelingprep.com/api/v3/historical-price-full/AAPL?serietype=line')\n      .then((response) => {\n        if (response.ok === true && response.status === 200) {\n          return response.json()\n        } else {\n          return {}\n        }\n      })\n      .then((json) => {\n        if (Object.keys(json).length !== 0) {\n          pricedata = json.historical\n          let newRange = []\n          for (let i = 0; i < pricedata.length; i++) {\n            if (pricedata[i].date > '2015') {\n              newRange.push(pricedata[i])\n            }\n          }\n          pricedata = newRange\n        }\n      })\n  })\n\n</script>\n\n<main>\n\t<h1>Apple Inc. Stock Historical Price</h1>\n\t<Graph {pricedata}></Graph>\n  <Table {pricedata}></Table>\n</main>\n\n<style>\n\tmain {\n\t\ttext-align: center;\n\t\twidth: 800px;\n\t\tmargin: 0 auto;\n\t}\n\n\th1 {\n\t\tcolor: #131234;\n\t}\n\n\t@media (max-width: 835px) {\n\t\tmain {\n      width: 100%;\n\t\t}\n\t}\n</style>\n",
    "<script>\n  import {onMount} from 'svelte'\n  import ApexCharts from 'apexcharts'\n  export let pricedata;\n\n  let data = [], categories = [];\n\n  $: {\n    for(let i = 0; i < pricedata.length; i++){\n      data = [...data, pricedata[i].close];\n      categories = [...categories, pricedata[i].date];\n    }\n  }\n\n  $: {\n    if(pricedata.length !== 0 && data.length !== 0) {\n\n      let options = {\n        chart: {\n          type: 'line'\n        },\n        series: [{\n          name: 'sales',\n          data: data\n        }],\n        xaxis: {\n          type: 'datetime',\n          categories: categories\n        }\n      };\n\n      let chart = new ApexCharts(document.querySelector('.graph'), options);\n      chart.render()\n    }\n  }\n\n</script>\n\n<style>\n  .graph{\n    box-shadow: 0 10px 10px lightgray;\n  }\n</style>\n\n<div class=\"graph\"></div>\n",
    "<script>\n  export let pricedata\n\n\n</script>\n\n<style>\n  .pricetable{\n    width: 100%;\n    box-shadow: 0 10px 10px lightgray;\n    margin: 30px 0;\n  }\n\n  .row {\n    display: flex;\n    flex-direction: row;\n  }\n\n  .header{\n    width: 50%;\n    text-align: center;\n    font-size: 20px;\n    font-weight: bold;\n    border-bottom: 2px solid #dddddd;\n    padding: 10px;\n  }\n\n  .cell{\n    width: 50%;\n    padding: 5px;\n    text-align: center;\n    border-bottom: 1px solid #dddddd;\n  }\n\n  .right-border{\n    border-right: 1px solid #dddddd;\n  }\n</style>\n\n<div class=\"pricetable\">\n  <div class=\"row\">\n    <div class=\"header right-border\">Date</div>\n    <div class=\"header\">Price</div>\n  </div>\n  {#each pricedata as {date, close}}\n  <div class=\"row\">\n    <div class=\"cell right-border\">{date}</div>\n    <div class=\"cell\">{close}</div>\n  </div>\n  {/each}\n</div>\n"
  ],
  "names": [],
  "mappings": "AAuCC,IAAI,aAAC,CAAC,AACL,UAAU,CAAE,MAAM,CAClB,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,CAAC,CAAC,IAAI,AACf,CAAC,AAED,EAAE,aAAC,CAAC,AACH,KAAK,CAAE,OAAO,AACf,CAAC,AAED,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AAC1B,IAAI,aAAC,CAAC,AACF,KAAK,CAAE,IAAI,AACf,CAAC,AACF,CAAC;ACdA,qBAAM,CAAC,AACL,UAAU,CAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,AACnC,CAAC;AClCD,0BAAW,CAAC,AACV,KAAK,CAAE,IAAI,CACX,UAAU,CAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CACjC,MAAM,CAAE,IAAI,CAAC,CAAC,AAChB,CAAC,AAED,IAAI,eAAC,CAAC,AACJ,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,GAAG,AACrB,CAAC,AAED,sBAAO,CAAC,AACN,KAAK,CAAE,GAAG,CACV,UAAU,CAAE,MAAM,CAClB,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,IAAI,CACjB,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAChC,OAAO,CAAE,IAAI,AACf,CAAC,AAED,oBAAK,CAAC,AACJ,KAAK,CAAE,GAAG,CACV,OAAO,CAAE,GAAG,CACZ,UAAU,CAAE,MAAM,CAClB,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,AAClC,CAAC,AAED,4BAAa,CAAC,AACZ,YAAY,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,AACjC,CAAC"
}